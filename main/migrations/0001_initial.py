# Generated by Django 5.1.7 on 2025-04-06 20:16

import autoslug.fields
import django.db.models.deletion
import embed_video.fields
import main.models.course
import main.models.lesson
import main.models.student
import main.models.teacher
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('body', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='PaymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=255)),
                ('request_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('AUTHENTICATION_FAILED', 'Authentication Failed'), ('PENDING', 'Pending')], max_length=50)),
                ('canceled', models.BooleanField(default=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('confirmed_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('payment_type', models.CharField(max_length=20)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField()),
                ('without_authenticate', models.BooleanField(default=False)),
                ('payload', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'Payment Log',
                'verbose_name_plural': 'Payment Logs',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='This field is automatically determined by the system, do not interfere.', unique=True, verbose_name='Unique ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('code', models.CharField(default=main.models.course.course_code_generator, max_length=100, unique=True, verbose_name='Course Code')),
                ('body', models.TextField(verbose_name='About')),
                ('image', models.ImageField(upload_to=main.models.course.image_upload)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('All Level', 'All Level')], default='Beginner', max_length=20, verbose_name='Level')),
                ('lessons_count', models.IntegerField(default=0)),
                ('requirements', models.TextField()),
                ('discount', models.PositiveIntegerField(default=0, verbose_name='Discount Percentage')),
                ('discount_starts_at', models.DateField(null=True, verbose_name='Discount Starts At')),
                ('discount_ends_at', models.DateField(null=True, verbose_name='Discount Ends At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('has_certificate', models.BooleanField(default=False, verbose_name='Has Certificate')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='main.category')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currencies', to='core.currency')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.cart')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='This field is automatically determined by the system, do not interfere.', unique=True, verbose_name='Unique ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('body', models.TextField(blank=True, null=True, verbose_name='Body')),
                ('file', models.FileField(blank=True, null=True, upload_to=main.models.lesson.file_upload, verbose_name='File')),
                ('url', embed_video.fields.EmbedVideoField(blank=True, null=True, verbose_name='URL')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_preview', models.BooleanField(default=False)),
                ('size', models.PositiveIntegerField(default=0, verbose_name='File Size')),
                ('duration', models.PositiveIntegerField(default=60, verbose_name='Duration')),
                ('media_type', models.CharField(choices=[('video', 'Video'), ('audio', 'Audio'), ('image', 'Image'), ('document', 'Document'), ('other', 'Other'), ('link', 'Link')], default='other', max_length=20, verbose_name='Media Type')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='main.course')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.currency')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.order')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('bio', models.TextField()),
                ('image', models.ImageField(upload_to=main.models.student.file_upload)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, choices=[('BAGHDAD', 'Baghdad'), ('BASE', 'Base'), ('DHI', 'Dhi'), ('ERBIL', 'Erbil'), ('HALABJA', 'Halabja'), ('KARBI', 'Karbi'), ('KURD', 'Kurd'), ('MAYADAN', 'Mayadan'), ('MAYMARA', 'Maymara'), ('NINAWA', 'Ninawa'), ('SALAHALDIN', 'Salahaldin'), ('SULLA', 'Sulla'), ('WASIT', 'Wasit')], max_length=255, null=True)),
                ('province_code', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(default='IQ', max_length=255)),
                ('birth_date', models.DateField()),
                ('identification_type', models.CharField(choices=[('00', 'Passport'), ('01', 'National ID'), ('02', 'Driving License'), ('03', 'Government Issued'), ('04', 'Other')], max_length=255)),
                ('identification_number', models.CharField(blank=True, max_length=255, null=True)),
                ('identification_country_code', models.CharField(default='IQ', max_length=255)),
                ('identification_expiration_date', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(default='IQ', max_length=64)),
                ('country_of_birth', models.CharField(default='IQ', max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name', unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('bio', models.TextField()),
                ('image', models.ImageField(upload_to=main.models.teacher.file_upload)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='teachers',
            field=models.ManyToManyField(related_name='teachers', to='main.teacher'),
        ),
        migrations.CreateModel(
            name='EnrolledCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='main.course')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Enrolled Course',
                'verbose_name_plural': 'Enrolled Courses',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('current', models.PositiveBigIntegerField(default=0)),
                ('complete', models.PositiveBigIntegerField(default=60)),
                ('is_completed', models.BooleanField(default=False)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='main.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lesson Progress',
                'verbose_name_plural': 'Lessons Progress',
                'unique_together': {('lesson', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('rating', models.PositiveIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'unique_together': {('user', 'course')},
            },
        ),
    ]
